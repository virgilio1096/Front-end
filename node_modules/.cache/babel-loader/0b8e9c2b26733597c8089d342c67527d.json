{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Front-end/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Dashboard from \"./modules/dashboard/index\"; // // Each logical \"route\" has two components, one for\n// // the sidebar and one for the main area. We want to\n// // render both of them in different places when the\n// // path matches the current URL.\n// // We are going to use this route config in 2\n// // spots: once for the sidebar and once in the main\n// // content section. All routes are in the same\n// // order they would appear in a <Switch>.\n// const routes = [\n//  {\n//    path: \"/\",\n//    exact: true,\n//    sidebar: () => <div>home!</div>,\n//    main: () => <h2>Home</h2>\n//  },\n//  {\n//    path: \"/bubblegum\",\n//    sidebar: () => <div>bubblegum!</div>,\n//    main: () => <h2>Bubblegum</h2>\n//  },\n//  {\n//    path: \"/shoelaces\",\n//    sidebar: () => <div>shoelaces!</div>,\n//    main: () => <h2>Shoelaces</h2>\n//  }\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SidebarExample() {\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: routes.map((route, index) =>\n            /*#__PURE__*/\n            // Render more <Route>s with the same paths as\n            // above, but different components this time.\n            _jsxDEV(Route, {\n              path: route.path,\n              exact: route.exact,\n              children: /*#__PURE__*/_jsxDEV(route.main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 26\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 14\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n_c = SidebarExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarExample\");","map":{"version":3,"sources":["/var/www/html/Front-end/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Dashboard","SidebarExample","display","flex","padding","routes","map","route","index","path","exact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,aAAa,IAAIC,MADlB,EAECC,MAFD,EAGCC,KAHD,EAICC,IAJD,QAKO,kBALP;AAMA,OAAOC,SAAP,MAAsB,2BAAtB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,cAAT,GAA0B;AACxC,sBAEC,QAAC,SAAD;AAAA,2BACC,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,+BAwCE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,OAAO,EAAE;AAApB,WAAZ;AAAA,iCACE,QAAC,MAAD;AAAA,sBACGC,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR;AAAA;AACV;AACA;AACA,oBAAC,KAAD;AAEE,cAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,cAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,cAAA,QAAQ,eAAE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAJZ,eACOF,KADP;AAAA;AAAA;AAAA;AAAA,oBAHD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAxCF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAFD;AA8DA;KA/DuBP,c","sourcesContent":["import React from \"react\";\nimport {\n BrowserRouter as Router,\n Switch,\n Route,\n Link\n} from \"react-router-dom\";\nimport Dashboard from \"./modules/dashboard/index\";\n\n// // Each logical \"route\" has two components, one for\n// // the sidebar and one for the main area. We want to\n// // render both of them in different places when the\n// // path matches the current URL.\n\n// // We are going to use this route config in 2\n// // spots: once for the sidebar and once in the main\n// // content section. All routes are in the same\n// // order they would appear in a <Switch>.\n// const routes = [\n//  {\n//    path: \"/\",\n//    exact: true,\n//    sidebar: () => <div>home!</div>,\n//    main: () => <h2>Home</h2>\n//  },\n//  {\n//    path: \"/bubblegum\",\n//    sidebar: () => <div>bubblegum!</div>,\n//    main: () => <h2>Bubblegum</h2>\n//  },\n//  {\n//    path: \"/shoelaces\",\n//    sidebar: () => <div>shoelaces!</div>,\n//    main: () => <h2>Shoelaces</h2>\n//  }\n// ];\n\nexport default function SidebarExample() {\n return (\n\n  <Dashboard>\n   <Router>\n     <div style={{ display: \"flex\" }}>\n     {/* <div style={{ display: \"flex\" }}>\n       <div\n         style={{\n           padding: \"10px\",\n           width: \"40%\",\n           background: \"#f0f0f0\"\n         }}\n       >\n         <ul st yle={{ listStyleType: \"none\", padding: 0 }}>\n           <li>\n             <Link to=\"/\">Home</Link>\n           </li>\n           <li>\n             <Link to=\"/bubblegum\">Bubblegum</Link>\n           </li>\n           <li>\n             <Link to=\"/shoelaces\">Shoelaces</Link>\n           </li>\n         </ul>\n\n         <Switch>\n           {routes.map((route, index) => (\n             // You can render a <Route> in as many places\n             // as you want in your app. It will render along\n             // with any other <Route>s that also match the URL.\n             // So, a sidebar or breadcrumbs or anything else\n             // that requires you to render multiple things\n             // in multiple places at the same URL is nothing\n             // more than multiple <Route>s.\n             <Route\n               key={index}\n               path={route.path}\n               exact={route.exact}\n               children={<route.sidebar />}\n             />\n           ))}\n         </Switch>\n       </div> */}\n\n       <div style={{ flex: 1, padding: \"10px\" }}>\n         <Switch>\n           {routes.map((route, index) => (\n             // Render more <Route>s with the same paths as\n             // above, but different components this time.\n             <Route\n               key={index}\n               path={route.path}\n               exact={route.exact}\n               children={<route.main />}\n             />\n           ))}\n         </Switch>\n       </div>\n     </div>\n   </Router>\n   </Dashboard>\n );\n}"]},"metadata":{},"sourceType":"module"}