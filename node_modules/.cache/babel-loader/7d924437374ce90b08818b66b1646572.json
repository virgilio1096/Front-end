{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Front-end/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; // Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\n// We are going to use this route config in 2\n// spots: once for the sidebar and once in the main\n// content section. All routes are in the same\n// order they would appear in a <Switch>.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = [{\n  path: \"/\",\n  exact: true,\n  sidebar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"home!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 19\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 16\n  }, this)\n}, {\n  path: \"/bubblegum\",\n  sidebar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"bubblegum!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 19\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Bubblegum\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 16\n  }, this)\n}, {\n  path: \"/shoelaces\",\n  sidebar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"shoelaces!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 19\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Shoelaces\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 16\n  }, this)\n}];\nexport default function SidebarExample() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      st: true,\n      yle: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        st: true,\n        yle: {\n          padding: \"10px\",\n          width: \"40%\",\n          background: \"#f0f0f0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: \"none\",\n            padding: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/bubblegum\",\n              children: \"Bubblegum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/shoelaces\",\n              children: \"Shoelaces\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: routes.map((route, index) =>\n          /*#__PURE__*/\n          // You can render a <Route> in as many places\n          // as you want in your app. It will render along\n          // with any other <Route>s that also match the URL.\n          // So, a sidebar or breadcrumbs or anything else\n          // that requires you to render multiple things\n          // in multiple places at the same URL is nothing\n          // more than multiple <Route>s.\n          _jsxDEV(Route, {\n            path: route.path,\n            exact: route.exact,\n            children: /*#__PURE__*/_jsxDEV(route.sidebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 26\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 14\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        st: true,\n        yle: {\n          flex: 1,\n          padding: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: routes.map((route, index) =>\n          /*#__PURE__*/\n          // Render more <Route>s with the same paths as\n          // above, but different components this time.\n          _jsxDEV(Route, {\n            path: route.path,\n            exact: route.exact,\n            children: /*#__PURE__*/_jsxDEV(route.main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 26\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n}\n_c = SidebarExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarExample\");","map":{"version":3,"sources":["/var/www/html/Front-end/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","routes","path","exact","sidebar","main","SidebarExample","display","padding","width","background","listStyleType","map","route","index","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n BrowserRouter as Router,\n Switch,\n Route,\n Link\n} from \"react-router-dom\";\n\n// Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\n\n// We are going to use this route config in 2\n// spots: once for the sidebar and once in the main\n// content section. All routes are in the same\n// order they would appear in a <Switch>.\nconst routes = [\n {\n   path: \"/\",\n   exact: true,\n   sidebar: () => <div>home!</div>,\n   main: () => <h2>Home</h2>\n },\n {\n   path: \"/bubblegum\",\n   sidebar: () => <div>bubblegum!</div>,\n   main: () => <h2>Bubblegum</h2>\n },\n {\n   path: \"/shoelaces\",\n   sidebar: () => <div>shoelaces!</div>,\n   main: () => <h2>Shoelaces</h2>\n }\n];\n\nexport default function SidebarExample() {\n return (\n   <Router>\n     <div st yle={{ display: \"flex\" }}>\n       <div\n         st yle={{\n           padding: \"10px\",\n           width: \"40%\",\n           background: \"#f0f0f0\"\n         }}\n       >\n         <ul style={{ listStyleType: \"none\", padding: 0 }}>\n           <li>\n             <Link to=\"/\">Home</Link>\n           </li>\n           <li>\n             <Link to=\"/bubblegum\">Bubblegum</Link>\n           </li>\n           <li>\n             <Link to=\"/shoelaces\">Shoelaces</Link>\n           </li>\n         </ul>\n\n         <Switch>\n           {routes.map((route, index) => (\n             // You can render a <Route> in as many places\n             // as you want in your app. It will render along\n             // with any other <Route>s that also match the URL.\n             // So, a sidebar or breadcrumbs or anything else\n             // that requires you to render multiple things\n             // in multiple places at the same URL is nothing\n             // more than multiple <Route>s.\n             <Route\n               key={index}\n               path={route.path}\n               exact={route.exact}\n               children={<route.sidebar />}\n             />\n           ))}\n         </Switch>\n       </div>\n\n       <div st yle={{ flex: 1, padding: \"10px\" }}>\n         <Switch>\n           {routes.map((route, index) => (\n             // Render more <Route>s with the same paths as\n             // above, but different components this time.\n             <Route\n               key={index}\n               path={route.path}\n               exact={route.exact}\n               children={<route.main />}\n             />\n           ))}\n         </Switch>\n       </div>\n     </div>\n   </Router>\n );\n}"]},"metadata":{},"sourceType":"module"}