{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Front-end/src/modules/amazon/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from \"axios\";\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\nexport default function Amazon(props) {\n  _s();\n\n  const [data, setData] = useState({});\n\n  function getData() {\n    var config = {\n      method: 'get',\n      url: 'http://localhost:5000/consultar_normal',\n      headers: {}\n    };\n    Axios(config).then(function (response) {\n      if (response.data.length > 0) {\n        let date_agroup = restructuredData(response.data);\n        console.log(date_agroup);\n        setData(date_agroup);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  const restructuredData = date_agroup => {\n    let agruop = {};\n    date_agroup.forEach(transfers => {\n      if (transfers.status in agruop) {\n        agruop[transfers.status] = agruop[transfers.status].concat([transfers]);\n      } else {\n        agruop[transfers.status] = [transfers];\n      }\n    });\n    return agruop;\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Amazon, \"nClF7WKDhjAimap7/SisPNVUyz0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Amazon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Amazon\");","map":{"version":3,"sources":["/var/www/html/Front-end/src/modules/amazon/index.js"],"names":["React","useState","useEffect","useContext","makeStyles","Axios","Grid","useStyles","theme","Amazon","props","data","setData","getData","config","method","url","headers","then","response","length","date_agroup","restructuredData","console","log","catch","error","agruop","forEach","transfers","status","concat","classes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY,EAAZ,CAAD,CAA5B;AAIA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AACA,WAASY,OAAT,GAAkB;AAEhB,QAAIC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,wCAFM;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMAZ,IAAAA,KAAK,CAACS,MAAD,CAAL,CACCI,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB,UAAGA,QAAQ,CAACR,IAAT,CAAcS,MAAd,GAAqB,CAAxB,EAA0B;AACxB,YAAIC,WAAW,GAAGC,gBAAgB,CAACH,QAAQ,CAACR,IAAV,CAAlC;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAT,QAAAA,OAAO,CAACS,WAAD,CAAP;AACD;AACF,KAPD,EAQCI,KARD,CAQO,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVD;AAYD;;AACD,QAAMJ,gBAAgB,GAAID,WAAD,IAAiB;AACxC,QAAIM,MAAM,GAAG,EAAb;AACAN,IAAAA,WAAW,CAACO,OAAZ,CAAqBC,SAAD,IAAe;AACjC,UAAIA,SAAS,CAACC,MAAV,IAAoBH,MAAxB,EAAgC;AAC9BA,QAAAA,MAAM,CAACE,SAAS,CAACC,MAAX,CAAN,GAA2BH,MAAM,CAACE,SAAS,CAACC,MAAX,CAAN,CAAyBC,MAAzB,CAAgC,CAACF,SAAD,CAAhC,CAA3B;AACD,OAFD,MAEO;AACLF,QAAAA,MAAM,CAACE,SAAS,CAACC,MAAX,CAAN,GAA2B,CAACD,SAAD,CAA3B;AACD;AACF,KAND;AAOA,WAAOF,MAAP;AACD,GAVD;;AAWAzB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMmB,OAAO,GAAGzB,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7CuBE,M;UAsCNF,S;;;KAtCME,M","sourcesContent":["import React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from \"axios\";\nimport { Grid } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n \n}));\n\nexport default function Amazon(props) {\n  const [data, setData] = useState({});\n  function getData(){\n\n    var config = {\n      method: 'get',\n      url: 'http://localhost:5000/consultar_normal',\n      headers: { }\n    };\n\n    Axios(config)\n    .then(function (response) {\n      if(response.data.length>0){\n        let date_agroup = restructuredData(response.data);\n        console.log(date_agroup)\n        setData(date_agroup);\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  }\n  const restructuredData = (date_agroup) => {\n    let agruop = {};\n    date_agroup.forEach((transfers) => {\n      if (transfers.status in agruop) {\n        agruop[transfers.status] = agruop[transfers.status].concat([transfers]);\n      } else {\n        agruop[transfers.status] = [transfers];\n      }\n    });\n    return agruop;\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <Grid>\n\n    </Grid>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}